为了方便查看Ubuntu下的git信息。安装smartgit工具。这个非商业用途是免费的。
还挺好用的。是基于java的，可以在不同平台上运行。
但是这个工具还比较占用内存。


查看帮助的方法
git help [cmd]

cmd有：
	1、开始一个工作区
		clone
		init
	2、在当前变更上工作
		add：这个表示添加到暂存区。
		mv 
		reset：重置当前HEAD到指定状态。
		rm
	3、检查历史和状态
		bisect
		grep
		log
		show
		status
	4、扩展、标记和调校历史记录
		branch
		checkout
		commit
		diff
		merge
		rebase
		tag
	5、协同工作
		fetch
		pull
		push
初始化

==========配置==================
配置全局名字
git config --global user.name "teddyxiong53"
git config --global user.email "1073167306@qq.com"

为特定的库配置用户信息
cd your_repo_dir
git config user.name "teddyxiong53"
git config  user.email "1073167306@qq.com"

===========修改==============
放弃本地的所有修改
git checkout HEAD
取消暂存
git reset HEAD

========分支=============
列出本地分支
git branch
查看远程分支
git branch -r
列出本地和远程分支
git branch -a

基于当前分支创建新的分支
git branch xx

检出一个分支，也是切换一个分支
git checkout xx


=====历史========
查看历史
git log
查看历史，并比较改动
git log -p
查看1条历史
git log -1
显示最近6个小时的提交
git log --since="6 hours"
显示两天之前的提交
git log --before="2 days"
显示历史，每个只占据一行
git log --pretty=oneline
显示改动行数统计
git log --stat

查看某个文件的改动历史
git log --pretty=oneline 1.txt
然后可以看到一些版本代号值。
git show hashcode
这样就可以看到这个文件的改动。
git log -p filename  这个也可以查看文件的改动。

=======回退到指定版本=================
git reset --hard xxx 
xxx 是git log看到的版本字符串。也可以是HEAD。

===========.gitignore相关问题==============
有时候发现添加到.gitignore里面的文件还是无法被忽略，原因是因为之前已经被添加追踪了。
需要执行下面的步骤：
第一步：xx/yy/zz要替换为实际的文件路径。
git filter-branch --force --index-filter \
  'git rm -r --cached --ignore-unmatch xx/yy/zz' \
  --prune-empty --tag-name-filter cat -- --all
  
第二步：
修改.gitignore。
第三步：
提交一次。

后面发现不用上面这么复杂。只要执行下面的就行了。
git rm -r --cached  "xx/yy"
然后提交就好了。


git本地仓库使用流程
1、指定一个目录，作为提交的目的地。
mkdir git_repo
cd git_repo
git init --bare xxx.git
2、工作目录下。
git init
git remote add origin /home/teddy/work/git_repo/xxx.git
git add .
git commit -m "xx"
git push --set-upstream origin master
这样就完成了。


git打包，这样就可以避免把.git目录打包进去。
git archive --format=zip --output master.zip master

本地有添加没有track的文件，确定丢弃。
git clean -d -fx ""


放弃本地的所有修改，并回退到指定版本。
git reset --hard hashcode


阅读代码时，怎么在版本的提交之间穿梭呢？
就用git reset --hard xxx
然后要配合git reflog来随时回到最新版本。


碰到的一个git的使用问题。
我不小心把一个30M的zip文件commit了。在push阶段发现很慢，于是强行停止，然后把zip文件删掉。
然后重新commit。再push。
但是在另外一台电脑上，进行pull操作时，就卡住了。
完全重新clone也不行。


#下面是设置24个小时内不需要重新输入用户名和密码
git config --global credential.helper 'cache --timeout 86400'



# 不要把LF转成CRLF，这样带来了很多麻烦。
git config --global core.autocrlf false

参考资料
1、Git常用命令速查表
https://juejin.im/entry/5b802f2f6fb9a019eb43bb42


